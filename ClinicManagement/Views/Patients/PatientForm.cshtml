@model ClinicManagement.Core.ViewModel.PatientFormViewModel
@{
    ViewBag.Title = "Register as a Doctor";
}

<div class="container-fluid h-100 bg-light text-dark">
    <div class="p-2">
        <h3>@Model.Heading</h3>
        <h6>Form for @Model.Heading</h6>
    </div>
    <hr />

</div>
<div class="container-fluid h-100">
    <div>
        @Html.ValidationSummary()
    </div>
    @using (Html.BeginForm(Model.Action, "Patients", FormMethod.Post, new { autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-6 col-md-6 col-lg-6 col-xl-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Sex)
                    @Html.DropDownListFor(m => m.Sex, new SelectList(Model.GendersList, "Value", "Text"), new { @class = "selectpicker form-control form-control-sm mr-3" })
                    @Html.ValidationMessageFor(m => m.Sex, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address)
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Phone)
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control form-control-sm", type = "number" })
                    @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6 col-md-5 col-lg-5 col-xl-5">
                <div class="form-group">
                    @Html.LabelFor(m => m.BirthDate)
                    @Html.TextBoxFor(m => m.BirthDate, new { @class = "datepicker form-control form-control-sm" })
                    @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Height)
                    @Html.TextBoxFor(m => m.Height, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(m => m.Height, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Weight)
                    @Html.TextBoxFor(m => m.Weight, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.City)
                    @Html.DropDownListFor(m => m.City, new SelectList(Model.CityList, "Value", "Text"),"Select", new { @class = "selectpicker form-control form-control-sm mr-3" })
                    @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                </div>
                @*<div class="form-group">
            @Html.LabelFor(m => m.Specialization)
            @Html.DropDownListFor(m => m.Specialization, new SelectList(Model.GendersList, "Id", "Name"), "--Select--", new { @class = "selectpicker form-control form-control-sm" })
            @Html.ValidationMessageFor(m => m.Specialization, "", new { @class = "text-danger" })
        </div>*@
                @*<div class="form-group">
            @Html.LabelFor(m => m.Sex)<br />
            <div class="form-check-inline">
                <label class="form-check-label">
                    @Html.RadioButtonFor(m => m.Sex, "Male")
                    Male
                </label>
            </div>
            <div class="form-check-inline">
                <label class="form-check-label">
                    @Html.RadioButtonFor(m => m.Sex, "Female")
                    Female
                </label>
            </div>
            <div class="form-check-inline">
                <label class="form-check-label">
                    @Html.RadioButtonFor(m => m.Sex, "Not to Disclose")
                    Not to Disclose
                </label>
            </div>
            <br />
            @Html.ValidationMessageFor(m => m.Sex, "", new { @class = "text-danger" })
        </div>*@

            </div>
        </div>
        <div class="row">
            <div class="col-md-3">

            </div>
            <div class="col-md-3">
                <button class="btn btn-primary">@Model.Heading</button>
            </div>
            <div class="col-md-3">
                <a class="btn btn-primary" href="/Patients/Index">Back to Home</a>
            </div>
            <div class="col-md-3">

            </div>
        </div>
    }
</div>

@section scripts
{
    <script>
        $(".datepicker").datepicker();
    </script>
    }
